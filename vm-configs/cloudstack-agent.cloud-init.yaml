#cloud-config

# Set hostname
hostname: cloudstack-agent

# # Add packages - using correct Alpine package names
# packages:
#     - qemu-system-aarch64
#     - libvirt-daemon
#     - libvirt-client
#     - dbus
#     - polkit
#     - linux-virt
#     - openssh
#     - vim
#     - htop
#     - bridge-utils
#     - nfs-utils-openrc
#     - iptables-openrc
#     - util-linux
#     - python3
#     - py3-pip
#     - py3-virtualenv
#     - openjdk11-jre
#     - git

# # Run commands on first boot
# runcmd:
#     # Configure system
#     - modprobe kvm

#     # Install and configure libvirt
#     - mkdir -p /etc/libvirt
#     - echo 'listen_tls = 0' > /etc/libvirt/libvirtd.conf
#     - echo 'listen_tcp = 1' >> /etc/libvirt/libvirtd.conf
#     - echo 'tcp_port = "16509"' >> /etc/libvirt/libvirtd.conf
#     - echo 'mdns_adv = 0' >> /etc/libvirt/libvirtd.conf
#     - echo 'auth_tcp = "none"' >> /etc/libvirt/libvirtd.conf
#     - mkdir -p /etc/libvirt/qemu
#     - echo 'vnc_listen = "0.0.0.0"' > /etc/libvirt/qemu/qemu.conf
#     - rc-update add libvirtd default || echo "libvirtd service not found"

#     # Set up networking bridges for CloudStack
#     - |
#         cat > /etc/network/interfaces << EOF
#         auto lo
#         iface lo inet loopback

#         auto eth0
#         iface eth0 inet manual

#         # Public network
#         auto cloudbr0
#         iface cloudbr0 inet dhcp
#           bridge_ports eth0
#           bridge_fd 5
#           bridge_stp off
#           bridge_maxwait 1

#         # Private network
#         auto cloudbr1
#         iface cloudbr1 inet manual
#           bridge_ports none
#           bridge_fd 5
#           bridge_stp off
#           bridge_maxwait 1
#         EOF

#     # Set up NFS for CloudStack storage
#     - mkdir -p /export/primary /export/secondary
#     - echo '/export  *(rw,async,no_root_squash,no_subtree_check)' > /etc/exports
#     - rc-update add nfs default || echo "nfs service not found"

#     # Set up CloudStack agent manually
#     - mkdir -p /opt/cloudstack
#     - cd /opt/cloudstack
#     - python3 -m venv csenv
#     - source csenv/bin/activate
#     - pip install --upgrade pip
#     - git clone https://github.com/apache/cloudstack.git
#     - cd cloudstack/systemvm/agent
#     - pip install -r requirements.txt || echo "Requirements installation failed"
#     - pip install . || echo "Agent installation failed"
#     - deactivate

#     # Configure CloudStack agent
#     - mkdir -p /etc/cloudstack/agent
#     - echo "host=MANAGEMENT_SERVER_IP" > /etc/cloudstack/agent/agent.properties
#     - echo "port=8250" >> /etc/cloudstack/agent/agent.properties
#     - echo "zone=ZONE_ID" >> /etc/cloudstack/agent/agent.properties
#     - echo "pod=POD_ID" >> /etc/cloudstack/agent/agent.properties
#     - echo "cluster=CLUSTER_ID" >> /etc/cloudstack/agent/agent.properties
#     - echo "guid=$(uuidgen)" >> /etc/cloudstack/agent/agent.properties

#     # Create a service script for the CloudStack agent
#     - |
#         cat > /etc/init.d/cloudstack-agent << 'EOF'
#         #!/sbin/openrc-run

#         name="CloudStack Agent"
#         description="Apache CloudStack KVM Agent"

#         command="/opt/cloudstack/csenv/bin/python"
#         command_args="/opt/cloudstack/csenv/bin/agent -c /etc/cloudstack/agent/agent.properties"
#         command_background="yes"
#         pidfile="/var/run/cloudstack-agent.pid"

#         depend() {
#           need net
#           after libvirt
#         }
#         EOF
#     - chmod +x /etc/init.d/cloudstack-agent
#     - rc-update add cloudstack-agent default || echo "Failed to add cloudstack-agent service"

# Configure user
users:
    - name: alpine
      lock_passwd: false
      hashed_passwd: $5$cmLotvIeozzbjflW$/piXv0gyfvXh9eTgr1uIAmkU9HqKWOQsMjIxzbfBbt4
      ssh_authorized_keys:
          - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHgqXxEe2kYQP57QKmfCb5wnhc6cD1LB6Ip5ldzAbvlb
    - name: root
      lock_passwd: false
      password: root
    - name: walteh
      groups: wheel,libvirt
      sudo: ALL=(ALL) NOPASSWD:ALL
      shell: /bin/ash
      ssh_authorized_keys:
          - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHgqXxEe2kYQP57QKmfCb5wnhc6cD1LB6Ip5ldzAbvlb
